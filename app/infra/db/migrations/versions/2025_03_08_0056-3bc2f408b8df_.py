"""empty message

Revision ID: 3bc2f408b8df
Revises: 
Create Date: 2025-03-08 00:56:43.217336

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '3bc2f408b8df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('transaction_id', sa.BigInteger(), nullable=False),
    sa.Column('data', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('object_type', sa.String(length=255), nullable=True),
    sa.Column('object_id', sa.BigInteger(), nullable=True),
    sa.Column('object_tx_id', sa.BigInteger(), nullable=True),
    sa.Column('target_type', sa.String(length=255), nullable=True),
    sa.Column('target_id', sa.BigInteger(), nullable=True),
    sa.Column('target_tx_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('verb', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity'))
    )
    op.create_index(op.f('ix_activity_transaction_id'), 'activity', ['transaction_id'], unique=False)
    op.create_table('files',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('object_uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_files')),
    comment='Данные файлов'
    )
    op.create_index(op.f('ix_files_object_uuid'), 'files', ['object_uuid'], unique=False)
    op.create_table('files_version',
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('object_uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.Column('name_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('object_uuid_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('updated_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_files_version'))
    )
    op.create_index(op.f('ix_files_version_end_transaction_id'), 'files_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_files_version_object_uuid'), 'files_version', ['object_uuid'], unique=False)
    op.create_index(op.f('ix_files_version_operation_type'), 'files_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_files_version_transaction_id'), 'files_version', ['transaction_id'], unique=False)
    op.create_table('orderfiles_version',
    sa.Column('order_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('order_id', 'file_id', 'transaction_id', name=op.f('pk_orderfiles_version'))
    )
    op.create_index(op.f('ix_orderfiles_version_end_transaction_id'), 'orderfiles_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_orderfiles_version_operation_type'), 'orderfiles_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_orderfiles_version_transaction_id'), 'orderfiles_version', ['transaction_id'], unique=False)
    op.create_table('orderkinds',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('skb_uuid', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orderkinds')),
    comment='Виды запросов в СКБ-Техно'
    )
    op.create_index(op.f('ix_orderkinds_skb_uuid'), 'orderkinds', ['skb_uuid'], unique=True)
    op.create_table('orderkinds_version',
    sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('skb_uuid', sa.String(), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.Column('name_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('description_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('skb_uuid_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('updated_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_orderkinds_version'))
    )
    op.create_index(op.f('ix_orderkinds_version_end_transaction_id'), 'orderkinds_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_orderkinds_version_operation_type'), 'orderkinds_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_orderkinds_version_skb_uuid'), 'orderkinds_version', ['skb_uuid'], unique=False)
    op.create_index(op.f('ix_orderkinds_version_transaction_id'), 'orderkinds_version', ['transaction_id'], unique=False)
    op.create_table('orders_version',
    sa.Column('order_kind_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('pledge_gd_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('pledge_cadastral_number', sa.String(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='t', autoincrement=False, nullable=True),
    sa.Column('is_send_to_gd', sa.Boolean(), server_default='f', autoincrement=False, nullable=True),
    sa.Column('is_send_request_to_skb', sa.Boolean(), server_default='f', autoincrement=False, nullable=True),
    sa.Column('errors', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('object_uuid', sqlalchemy_utils.types.uuid.UUIDType(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=True),
    sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('email_for_answer', sqlalchemy_utils.types.email.EmailType(length=255), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.Column('order_kind_id_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('pledge_gd_id_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('pledge_cadastral_number_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_active_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_send_to_gd_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_send_request_to_skb_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('errors_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('object_uuid_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('response_data_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('email_for_answer_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('updated_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_orders_version'))
    )
    op.create_index(op.f('ix_orders_version_end_transaction_id'), 'orders_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_orders_version_operation_type'), 'orders_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_orders_version_transaction_id'), 'orders_version', ['transaction_id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction'))
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username')),
    comment='Пользователи'
    )
    op.create_table('users_version',
    sa.Column('username', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.Column('username_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('email_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('password_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_active_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_superuser_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('updated_at_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_users_version'))
    )
    op.create_index(op.f('ix_users_version_end_transaction_id'), 'users_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_users_version_operation_type'), 'users_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_users_version_transaction_id'), 'users_version', ['transaction_id'], unique=False)
    op.create_table('orders',
    sa.Column('order_kind_id', sa.Integer(), nullable=False),
    sa.Column('pledge_gd_id', sa.Integer(), nullable=False),
    sa.Column('pledge_cadastral_number', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('is_send_to_gd', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_send_request_to_skb', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('errors', sa.Text(), nullable=True),
    sa.Column('object_uuid', sqlalchemy_utils.types.uuid.UUIDType(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('email_for_answer', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_kind_id'], ['orderkinds.id'], name=op.f('fk_orders_order_kind_id_orderkinds')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders')),
    comment='Запросы в СКБ-Техно'
    )
    op.create_table('orderfiles',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name=op.f('fk_orderfiles_file_id_files')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_orderfiles_order_id_orders')),
    sa.PrimaryKeyConstraint('order_id', 'file_id', name=op.f('pk_orderfiles')),
    comment='Связь заказов и файлов'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orderfiles')
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_version_transaction_id'), table_name='users_version')
    op.drop_index(op.f('ix_users_version_operation_type'), table_name='users_version')
    op.drop_index(op.f('ix_users_version_end_transaction_id'), table_name='users_version')
    op.drop_table('users_version')
    op.drop_table('users')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_orders_version_transaction_id'), table_name='orders_version')
    op.drop_index(op.f('ix_orders_version_operation_type'), table_name='orders_version')
    op.drop_index(op.f('ix_orders_version_end_transaction_id'), table_name='orders_version')
    op.drop_table('orders_version')
    op.drop_index(op.f('ix_orderkinds_version_transaction_id'), table_name='orderkinds_version')
    op.drop_index(op.f('ix_orderkinds_version_skb_uuid'), table_name='orderkinds_version')
    op.drop_index(op.f('ix_orderkinds_version_operation_type'), table_name='orderkinds_version')
    op.drop_index(op.f('ix_orderkinds_version_end_transaction_id'), table_name='orderkinds_version')
    op.drop_table('orderkinds_version')
    op.drop_index(op.f('ix_orderkinds_skb_uuid'), table_name='orderkinds')
    op.drop_table('orderkinds')
    op.drop_index(op.f('ix_orderfiles_version_transaction_id'), table_name='orderfiles_version')
    op.drop_index(op.f('ix_orderfiles_version_operation_type'), table_name='orderfiles_version')
    op.drop_index(op.f('ix_orderfiles_version_end_transaction_id'), table_name='orderfiles_version')
    op.drop_table('orderfiles_version')
    op.drop_index(op.f('ix_files_version_transaction_id'), table_name='files_version')
    op.drop_index(op.f('ix_files_version_operation_type'), table_name='files_version')
    op.drop_index(op.f('ix_files_version_object_uuid'), table_name='files_version')
    op.drop_index(op.f('ix_files_version_end_transaction_id'), table_name='files_version')
    op.drop_table('files_version')
    op.drop_index(op.f('ix_files_object_uuid'), table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('ix_activity_transaction_id'), table_name='activity')
    op.drop_table('activity')
    # ### end Alembic commands ###
