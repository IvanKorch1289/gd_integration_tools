"""empty message

Revision ID: 50d4d1838484
Revises: 
Create Date: 2025-01-13 14:50:44.250800

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "50d4d1838484"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "files",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "object_uuid",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_files")),
        comment="Данные файлов",
    )
    op.create_index(
        op.f("ix_files_object_uuid"), "files", ["object_uuid"], unique=False
    )
    op.create_table(
        "orderkinds",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("skb_uuid", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_orderkinds")),
        comment="Виды запросов в СКБ-Техно",
    )
    op.create_index(
        op.f("ix_orderkinds_skb_uuid"), "orderkinds", ["skb_uuid"], unique=True
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column(
            "password", sqlalchemy_utils.types.password.PasswordType(), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
        comment="Пользователи",
    )
    op.create_table(
        "orders",
        sa.Column("order_kind_id", sa.Integer(), nullable=False),
        sa.Column("pledge_gd_id", sa.Integer(), nullable=False),
        sa.Column("pledge_cadastral_number", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default="t", nullable=False),
        sa.Column("is_send_to_gd", sa.Boolean(), server_default="f", nullable=False),
        sa.Column(
            "is_send_request_to_skb", sa.Boolean(), server_default="f", nullable=False
        ),
        sa.Column("errors", sa.Text(), nullable=True),
        sa.Column(
            "object_uuid",
            sqlalchemy_utils.types.uuid.UUIDType(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "response_data", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "email_for_answer",
            sqlalchemy_utils.types.email.EmailType(length=255),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_kind_id"],
            ["orderkinds.id"],
            name=op.f("fk_orders_order_kind_id_orderkinds"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_orders")),
        comment="Запросы в СКБ-Техно",
    )
    op.create_table(
        "orderfiles",
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"], ["files.id"], name=op.f("fk_orderfiles_file_id_files")
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], name=op.f("fk_orderfiles_order_id_orders")
        ),
        sa.PrimaryKeyConstraint(
            "order_id", "file_id", "id", name=op.f("pk_orderfiles")
        ),
        comment="Связь заказов и файлов",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("orderfiles")
    op.drop_table("orders")
    op.drop_table("users")
    op.drop_index(op.f("ix_orderkinds_skb_uuid"), table_name="orderkinds")
    op.drop_table("orderkinds")
    op.drop_index(op.f("ix_files_object_uuid"), table_name="files")
    op.drop_table("files")
    # ### end Alembic commands ###
