[tool.poetry]
name = "gd_advanced_tools"
version = "0.1.0"
description = ""
authors = ["crazyivan1289 <crazyivan1289@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.2"
sqlalchemy = "^2.0.36"
uvicorn = {extras = ["standart"], version = "^0.32.0"}
pydantic = {extras = ["email"], version = "^2.10.3"}
pydantic-settings = "^2.6.0"
fastapi-utils = "^0.7.0"
asyncpg = "^0.29.0"
alembic = "^1.13.3"
greenlet = "^3.1.1"
python-dotenv = "^1.0.1"
bump-pydantic = "^0.8.0"
typing-inspect = "^0.9.0"
fastapi-filter = "^2.0.0"
aioboto3 = "^13.2.0"
python-multipart = "^0.0.17"
black = "^24.10.0"
flake8 = "^7.1.1"
mypy = "^1.13.0"
isort = "^5.13.2"
autopep8 = "^2.3.1"
pylint = "^3.3.1"
graypy = "^2.1.0"
sqladmin = "^0.20.1"
passlib = "^1.7.4"
setuptools = "^75.6.0"
aiohttp = "^3.11.10"
poetry-dotenv-plugin = "^0.2.0"
json-tricks = "^3.17.3"
aiosmtplib = "^3.0.2"
sqlalchemy-utils = "^0.41.2"
prometheus-fastapi-instrumentator = "^7.0.0"
starlette-exporter = "^0.23.0"
fastapi-limiter = "^0.1.6"
vulture = "^2.14"
pandas = "^2.2.3"
openpyxl = "^3.1.5"
sqlalchemy-continuum = "^1.4.2"
psycopg2 = "^2.9.10"
zeep = "^4.3.1"
bandit = "^1.8.2"
async-timeout = "^5.0.1"
hvac = "^2.3.0"
aiodns = "^3.2.0"
opentelemetry-api = "^1.30.0"
opentelemetry-sdk = "^1.30.0"
opentelemetry-instrumentation-fastapi = "^0.51b0"
opentelemetry-exporter-otlp-proto-grpc = "^1.30.0"
aiocircuitbreaker = "^2.0.0"
trufflehog = "^2.2.1"
apscheduler = "^3.11.0"
faststream = "^0.5.34"
aiokafka = "^0.12.0"
grpcio = "^1.70.0"
protobuf = "^5.29.3"
memray = "^1.15.0"
grpcio-tools = "^1.70.0"
memory-profiler = "^0.61.0"
py-spy = "^0.4.0"
prefect = "^3.2.7"
aio-pika = "^9.5.5"
prefect-client = "^3.2.9"
aiofiles = "^24.1.0"
sonarqube-api = "^1.3.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.14.1"
pip-audit = "^2.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py312"]
include = '\.pyi?$'
exclude = '/migrations/'

[tool.isort]
src_paths = ["./app"]
skip = ["__init__.py"]
combine_as_imports = true
balanced_wrapping = true
include_trailing_comma = true
multi_line_output = 3
lines_after_imports = 2
known_standard_library = [
    "hashlib", "re", "os", "path", "collections", "io", "enum", "sys",
    "traceback", "datetime", "typing", "contextlib", "functools",
    "logging", "pathlib", "abc", "uuid", "json", "importlib", "email",
    "zipfile", "base64", "bson", "gzip", "urllib", "socket", "ssl",
    "asyncio", "queue"
]
known_third_party = [
    "confluent_kafka", "aiologger", "aiokafka", "zeep", "blinker",
    "pandas", "graypy", "pyclamd", "sqlalchemy_utils", "fastapi_limiter",
    "loguru", "sqlalchemy", "fast_api", "passlib", "aioredis", "psycopg2",
    "pydantic", "sqladmin", "joblib", "streamlit", "aioboto", "fastauth",
    "tiny_url", "jose", "aiobotocore", "pyshorteners", "aiohttp", "celery",
    "redis", "flet", "apscheduler", "fastapi_utils", "hvac", "pydantic_settings",
    "sqlalchemy-continuum","async-timeout", "starlette-exporter", "starlette",
    "prometheus-fastapi-instrumentator", "websockets", "aiosmtplib", "json_tricks",
    "aioboto3", "fastapi_filter", "asyncpg", "aiodns", "aiocircuitbreaker",
    "pymongo", "motor", "fastapi-limiter", "vulture", "openpyxl", "opentelemetry",
    "opentelemetry-sdk", "opentelemetry-instrumentation-fastapi", "hvac", "aio-pika",
    "opentelemetry-exporter-otlp-proto-grpc", "grpc", "prefect-client", "aiofiles"

]
known_first_party = ["app"]
no_lines_before = ["FUTURE", "STANDARD_LIBRARY", "THIRD_PARTY", "FIRST_PARTY", "LOCAL_FOLDER"]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
check_untyped_defs = true
disallow_incomplete_defs = true
disable_error_code = [
    "no-untyped-def",
    "override",
    "arg-type",
    "assignment",
    "import-untyped",
    "union-attr",
    "var-annotated",
    "call-arg",
    "call-overload"
]
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.flake8]
ignore = "E501, W503"
exclude = [
    ".git", ".gitignore", "__pycache__", "*/migrations/*", "versions*",
    ".venv", ".pytest_cache", ".coverage", ".mypy_cache", "*env*", "*venv"
]
max-line-length = 97
max-complexity = 18

[tool.vulture]
ignore_names = [
    "x_api_key"
]
min_confidence = 70
exclude = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*"
]
